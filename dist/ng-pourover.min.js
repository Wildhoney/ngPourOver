/*! ng-pourover by Adam Timberlake <adam.timberlake@gmail.com> created on 2014-05-14 */
!function(a,b,c){"use strict";var d=b.module("ngPourOver",[]),e=a.PourOver;d.service("PourOver",function(){var a=function(a){this._collection=new e.Collection(a)};return a.prototype={DEFAULT_TYPE:"and",_collection:[],_filters:[],_sortBy:null,_debug:!1,setDebug:function(a){this._debug=a},addExactFilter:function(a,b){return this.addFilter("makeExactFilter",a,b),!1},addInclusionFilter:function(a,b){this.addFilter("makeInclusionFilter",a,b)},addFilter:function(a,b,c){var d=e[a](b,c||this._fetchProperties(b));this._collection.addFilters([d])},addSort:function(a,b){var c=e.Sort.extend({attr:a,fn:b});this._collection.addSorts([new c(a)])},addItem:function(a){this._collection.addItems([a])},sortBy:function(a){this._debug++,this._sortBy=a},unsort:function(){this._debug++,this._sortBy=null},filterBy:function(a,b,c){if(c=c||this.DEFAULT_TYPE,!_.contains(["and","or","not"],c))throw"ngPourOver: Type '"+c+"' is not of valid filter types: and, or, not.";if("undefined"==typeof this._collection.filters[a])throw"ngPourOver: Filter '"+a+"' hasn't yet been defined.";this._debug++,this._collection.filters[a].query(b),this._filters[a]=c},unfilterBy:function(a){this._debug++,this._collection.filters[a].query([]),delete this._filters[a]},unfilter:function(){this._debug++;for(var a in this._collection.filters)this._collection.filters.hasOwnProperty(a)&&(this._collection.filters[a].query([]),delete this._filters[a])},_fetchProperties:function(a){var b=_.pluck(this._collection.items,a),c=_.every(b,function(a){return _.isArray(a)});return c&&(b=_.flatten(b)),b}},a}),d.filter("poCollection",function(){return function(a){if(a._debug&&c.time("timeMeasure"),"undefined"==typeof a._collection)return a;var b=new e.View("defaultView",a._collection),d=b.match_set,f=a._collection.filters;a._pageSize&&(b.page_size=a._pageSize),a._sortBy&&b.setSort(a._sortBy),_.forEach(f,function(b,c){if("undefined"!=typeof a._filters[c]){var e=b.current_query,f=a._filters[c];d=d[f](e)}}),b.match_set=d;var g=b.getCurrentItems();return a._debug&&c.timeEnd("timeMeasure"),g}})}(window,window.angular,window.console);